add_executable(test_accumulate      test_accumulate.cpp)
add_executable(test_count           test_count.cpp)
add_executable(test_index_of_if     test_index_of_if.cpp)
add_executable(test_find_if         test_find_if.cpp)
add_executable(test_is_sorted       test_is_sorted.cpp)
add_executable(test_sort            test_sort.cpp)
add_executable(test_transform       test_transform.cpp)
add_executable(test_transform_tail  test_transform_tail.cpp)
add_executable(test_transform2      test_transform2.cpp)
add_executable(test_generator       test_generator.cpp)
add_executable(test_generate        test_generate.cpp)
add_executable(test_shuffle         test_shuffle.cpp)
add_executable(test_random_shuffle  test_random_shuffle.cpp)
add_executable(test_for_            test_for_.cpp)
add_executable(test_unique_if       test_unique_if.cpp)
add_executable(test_unique_first_if test_unique_first_if.cpp)
add_executable(test_select          test_select.cpp)

wci_test(NAME algorithm_accumulate       TARGET test_accumulate)
wci_test(NAME algorithm_count            TARGET test_count)
wci_test(NAME algorithm_transform        TARGET test_transform)
wci_test(NAME algorithm_transform2       TARGET test_transform2)
wci_test(NAME algorithm_transform_tail   TARGET test_transform_tail)
wci_test(NAME algorithm_index_of_if      TARGET test_index_of_if)
wci_test(NAME algorithm_find_if          TARGET test_find_if)
wci_test(NAME algorithm_unique_if        TARGET test_unique_if)
wci_test(NAME algorithm_unique_first_if  TARGET test_unique_first_if)
wci_test(NAME algorithm_select           TARGET test_select)
wci_test(NAME algorithm_generator        TARGET test_generator)
wci_test(NAME algorithm_generate         TARGET test_generate)
wci_test(NAME algorithm_for_             TARGET test_for_)
wci_test(NAME algorithm_is_sorted        TARGET test_is_sorted)
wci_test(NAME algorithm_sort             TARGET test_sort)
wci_test(NAME algorithm_shuffle          TARGET test_shuffle)
wci_test(NAME algorithm_random_shuffle   TARGET test_random_shuffle)

